version: "3.3"

services:

  db:
    build:
      context: .
      dockerfile: ./dockerfile/postgresql/Dockerfile
    volumes:
      - db-data:/var/lib/postgresql/data
      - .init.sql:/docker-entrypoint-initdb/10-init.sql
    restart: on-failure:10
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    env_file:
      - ./environment/dev/django.env

  django:
    build:
      context: .
      dockerfile: ./dockerfile/django/Dockerfile
    depends_on:
      - db
    ports:
      - "8000:8000"
    restart: on-failure
    volumes:
      - .:/code/
      - ./private:/private/
    env_file:
      - ./environment/dev/django.env
    command: python manage.py runserver 0.0.0.0:8000

  nginx:
    image: nginx
    volumes:
      - "./confs-docker/nginx/:/etc/nginx/sites-available/"
      - "./confs-docker/nginx/:/etc/nginx/sites-enabled/"
      - "./confs-docker/nginx/:/etc/nginx/conf.d/"
      - "./confs-docker/nginx.conf:/etc/nginx/nginx.conf"
      - ./static:/static
      - ./private:/private/
      - ./media:/media/
    ports:
      - "8080:80"
    command: nginx -g "daemon off;"
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

  minio:
    image: minio/minio
    volumes:
      #- ./minio_data:/data
      #- minio_sys:/data/.minio.sys/
      - minio_sys:/data
    ports:
      - "9000:9000"
    env_file:
      - ./environment/dev/django.env
    command: server --address ":9000" /data
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq # this way it always starts on the same hostname, preventing multiple log folders
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/ # creates one logging folder only, maps the full folder
    ports:
      - "5672:5672"
    restart: on-failure
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      timeout: 5s
      retries: 1
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  celery:
    build:
      context: .
      dockerfile: ./dockerfile/django/Dockerfile
    restart: on-failure
    depends_on:
      - db
      - rabbitmq
    volumes:
      - .:/code/
    env_file:
      - ./environment/dev/django.env
    #command: celery worker -A kww_project -B -E -l info -Q backup,celery --autoscale=4,1
    command: celery -A knowhowware worker -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

  flower:
    build:
      context: .
      dockerfile: ./dockerfile/django/Dockerfile
    restart: on-failure
    depends_on:
      - db
      - rabbitmq
    ports:
      - "5555:5555"
    volumes:
      - .:/code/
    env_file:
      - ./environment/dev/django.env
    #command: celery worker -A kww_project -B -E -l info -Q backup,celery --autoscale=4,1
    command: celery -A knowhowware flower


volumes:
  db-data:
  rabbitmq_data:
  minio_sys:


